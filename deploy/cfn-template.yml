---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Deploying a static site to an S3 bucket distributed by cloudfront
  Uses external resources that will not be managed by the stack.

Parameters:
  MainDomainName:
    Type: String
    Description: Second and top level domain. e.g. example.com

  DNSCertArn:
    Type: String
    Description: Arn of certificate of custom domain for SSL

  ZoneId:
    Type: String
    Description: Hosted zone id of the custom domain

Resources:

  ##############
  # S3 Backing #
  ##############

  SiteStorageBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub static-site.${MainDomainName}

  OriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Permit access S3 bucket content only through CloudFront

  DistPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: SiteStorageBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt: [ OriginAccessIdentity , S3CanonicalUserId ]
            Action: "s3:GetObject"
            Resource: !Sub "${SiteStorageBucket.Arn}/*"

  ###########################
  # Cloudfront Distribution #
  ###########################

  SiteDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn: SiteStorageBucket
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt SiteStorageBucket.DomainName
            Id: S3-static-site
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${OriginAccessIdentity}
        Enabled: 'true'
        Comment: Distribute with cloudfront to get that sweet https
        DefaultRootObject: 'index.html'
        IPV6Enabled: 'true'
        Aliases:
          - !Sub ${MainDomainName}
        DefaultCacheBehavior:
          MaxTTL: 7200
          DefaultTTL: 3600
          MinTTL: 300
          AllowedMethods:
          - GET
          - HEAD
          TargetOriginId: S3-static-site
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_200
        ViewerCertificate:
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2019
          AcmCertificateArn: !Ref DNSCertArn

  #######
  # DNS #
  #######
  
  CloudfrontDNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref ZoneId
      RecordSets:
        - Name: !Sub ${MainDomainName} 
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt SiteDistribution.DomainName
            EvaluateTargetHealth: false
        - Name: !Sub ${MainDomainName} 
          Type: AAAA
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt SiteDistribution.DomainName
            EvaluateTargetHealth: false
      
  
#  # This record set can't be pre-existing
#  AssetDNSA:
#    Type: AWS::Route53::RecordSet
#    Properties:
#      Name: !Sub ${MainDomainName} 
#      HostedZoneId: !Ref ZoneId
#      Comment: Static site IPV4 record
#      Type: A
#      AliasTarget:
#        HostedZoneId: Z2FDTNDATAQYW2
#        DNSName: !GetAtt SiteDistribution.DomainName
#        EvaluateTargetHealth: false

#  AssetDNSAAAA:
#    Type: AWS::Route53::RecordSet
#    Properties:
#      Name: !Sub ${MainDomainName} 
#      HostedZoneId: !Ref ZoneId
#      Comment: Static site IPV6 record
#      Type: AAAA
#      AliasTarget:
#        HostedZoneId: Z2FDTNDATAQYW2
#        DNSName: !GetAtt SiteDistribution.DomainName
#        EvaluateTargetHealth: false
